library(readxl)
sq5 <- read_excel("sq5.csv")
sq5 <- read.csv("~/RStudio/sq5.csv", header = TRUE)
View(sq5)
library(readr)
sq5 <- read_csv("sq5.csv")
View(sq5)
library(readr)
X11_with_followup <- read_csv("~/11_with_followup.csv")
View(X11_with_followup)
setwd("~/Documents/GitHub/usb-gxmu-suqin")
library(readr)
Date5 <- read_csv("data/Date5.csv")
View(Date5)
#合并新下载的Date5.csv
library(dplyr)
library(readr)
#读取两个文件
data1 <- read_csv("data/Date5.csv")
data2 <- read_csv("output/2025.8.4/filtered_postbaseline_CVD_with_isCVD.csv")
# 合并（只保留两个表中都有的 participant.eid）
merged_data <- inner_join(data1, data2, by = "participant.eid")
# 创建输出文件夹（如果不存在）
if(!dir.exists("output/2025.8.11")){
dir.create("output/2025.8.11", recursive = TRUE)
}
# 保存到新的 CSV 文件
write_csv(merged_data, "output/2025.8.11/merged_Date5_with_filtered_CVD.csv")
cat("合并完成，结果已保存到 output/2025.8.11/merged_Date5_with_filtered_CVD.csv\n")
library(readr)
merged_Date5_with_filtered_CVD <- read_csv("output/2025.8.11/merged_Date5_with_filtered_CVD.csv")
View(merged_Date5_with_filtered_CVD)
library(readr)
library(dplyr)
# 读取文件
df <- read_csv("output/2025.8.11/merged_Date5_with_filtered_CVD.csv")
# 查看该列的数值构成（频数统计）
df %>%
count(participant.p6153_i0) %>%
arrange(desc(n))
print(n = 21)
library(readr)
library(dplyr)
# 读取文件（注意文件名是 Data5 还是 Date5）
df <- read_csv("output/2025.8.11/merged_Data5_with_filtered_CVD.csv")
setwd("~/Documents/GitHub/usb-gxmu-suqin")
library(readr)
library(dplyr)
# 读取文件（注意文件名是 Data5 还是 Date5）
df <- read_csv("output/2025.8.11/merged_Data5_with_filtered_CVD.csv")
# 读取文件（注意文件名是 Data5 还是 Date5）
df <- read_csv("output/2025.8.11/merged_Date5_with_filtered_CVD.csv")
# 打印每个取值的频数和百分比
result <- df %>%
count(participant.p6153_i0) %>%
mutate(percent = round(100 * n / sum(n), 2)) %>%
arrange(desc(n))
print(result)
#查看字段6153用药情况
library(readr)
library(dplyr)
# 文件路径
input_file <- "output/2025.8.11/merged_Date5_with_filtered_CVD.csv"
output_file <- "output/2025.8.11/participant_p6153_i0_distribution.csv"
# 读取数据
df <- read_csv(input_file)
# 统计数值构成
result <- df %>%
count(participant.p6153_i0) %>%
mutate(percent = round(100 * n / sum(n), 2)) %>%
arrange(desc(n))
# 保存结果为 CSV
write_csv(result, output_file)
cat("统计完成，结果已保存到：", output_file, "\n")
# 加载包
library(readr)
library(dplyr)
library(stringr)
infile  <- "output/2025.8.11/participant_p6153_i0_distribution.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 读入
df <- read_csv(infile, show_col_types = FALSE)
# 1) 高血压状态：有“患病年龄”且>0 记为1
age_num <- suppressWarnings(as.numeric(df$participant.p2966_i0))
df$hypertension_status <- ifelse(!is.na(age_num) & age_num > 0, 1, 0)
# 稳健生成 hypertension_status 和 antihypertensive_med
library(readr)
library(dplyr)
library(stringr)
library(purrr)
infile  <- "output/2025.8.11/participant_p6153_i0_distribution.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 读入为字符，避免 [] 被误解析
df <- read_csv(infile, col_types = cols(.default = col_character()), show_col_types = FALSE)
# ---- 自动匹配列名（兼容 _i0 / _i0_a1 / 无后缀等）----
age_candidates <- names(df)[str_detect(names(df),
regex("participant\\.p?2966(.*)?", ignore_case = TRUE))]
med_candidates <- names(df)[str_detect(names(df),
regex("participant\\.p?6153(.*)?", ignore_case = TRUE))]
if (length(age_candidates) == 0) stop("找不到高血压患病年龄列（如 participant.p2966_i0）。请检查表头。")
# 稳健生成 hypertension_status 和 antihypertensive_med
library(readr)
library(dplyr)
library(stringr)
library(purrr)
infile  <- "output/2025.8.11/merged_Date5_with_filtered_CVD.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 读入为字符，避免 [] 被误解析
df <- read_csv(infile, col_types = cols(.default = col_character()), show_col_types = FALSE)
# ---- 自动匹配列名（兼容 _i0 / _i0_a1 / 无后缀等）----
age_candidates <- names(df)[str_detect(names(df),
regex("participant\\.p?2966(.*)?", ignore_case = TRUE))]
med_candidates <- names(df)[str_detect(names(df),
regex("participant\\.p?6153(.*)?", ignore_case = TRUE))]
if (length(age_candidates) == 0) stop("找不到高血压患病年龄列（如 participant.p2966_i0）。请检查表头。")
if (length(med_candidates) == 0) stop("找不到用药列（如 participant.p6153_i0）。请检查表头。")
age_col <- age_candidates[1]
med_col <- med_candidates[1]
message("使用列：age_col = ", age_col, " ; med_col = ", med_col)
# ---- 生成两列 ----
df2 <- df %>%
mutate(
# 高血压患病年龄：>0 记 1，否则 0
age_num = suppressWarnings(as.numeric(.data[[age_col]])),
hypertension_status = if_else(!is.na(age_num) & age_num > 0, 1L, 0L),
# 用药：只要 [] 或任意分隔里包含独立的“2”就记 1；否则 0
# 兼容 "[2]", "[2,5]", "2;5", "5|2|9", "2 5" 等写法
med_raw = replace_na(.data[[med_col]], ""),
med_has2 = map_lgl(str_extract_all(med_raw, "\\d+"), ~ any(.x == "2")),
antihypertensive_med = if_else(med_has2, 1L, 0L)
) %>%
select(-age_num, -med_raw, -med_has2)
# 读取与处理
library(readr)
library(dplyr)
library(stringr)
library(purrr)
infile  <- "output/2025.8.11/merged_Date5_with_filtered_CVD.csv.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 以字符读入，避免 [] 被转义
df <- read_csv(infile, col_types = cols(.default = col_character()), show_col_types = FALSE)
setwd("~/Documents/GitHub/usb-gxmu-suqin")
# 读取与处理
library(readr)
library(dplyr)
library(stringr)
library(purrr)
infile  <- "output/2025.8.11/merged_Date5_with_filtered_CVD.csv.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 以字符读入，避免 [] 被转义
df <- read_csv(infile, col_types = cols(.default = col_character()), show_col_types = FALSE)
# 稳健生成 hypertension_status 和 antihypertensive_med
# 读取与处理
library(readr)
library(dplyr)
library(stringr)
library(purrr)
infile  <- "output/2025.8.11/merged_Date5_with_filtered_CVD.csv"
outfile <- "output/2025.8.11/participant_with_htn_med_flags.csv"
# 以字符读入，避免 [] 被转义
df <- read_csv(infile, col_types = cols(.default = col_character()), show_col_types = FALSE)
df2 <- df %>%
mutate(
# 高血压状态：患病年龄>0 记 1
age_num = suppressWarnings(as.numeric(participant.p2966_i0)),
hypertension_status = if_else(!is.na(age_num) & age_num > 0, 1L, 0L),
# 用药：只要方括号里/任意分隔里出现独立的“2”就算服用降压药
med_raw = ifelse(is.na(participant.p6153_i0), "", participant.p6153_i0),
# 抽取所有数字 token，再判断是否包含 "2"
med_has2 = map_lgl(str_extract_all(med_raw, "\\d+"), ~ any(.x == "2")),
antihypertensive_med = if_else(med_has2, 1L, 0L)
) %>%
select(-age_num, -med_raw, -med_has2)
write_csv(df2, outfile)
cat("已生成：", outfile, "\n")
